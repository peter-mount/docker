<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>onl.area51.docker</groupId>
    <artifactId>docker</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    
    <name>Docker Parent</name>
    
    <description>Various docker images</description>
    
    <modules>
        <module>docker-client</module>
        <module>java</module>
        <module>jenkins</module>
        <module>nexus</module>
        <module>postgis</module>
        <module>rabbitmq</module>
        <module>ubuntu-dev</module>
    </modules>
    
    <properties>
        <docker.image.prefix>area51</docker.image.prefix>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    
        <jenkins.repo>http://mirrors.jenkins-ci.org</jenkins.repo>
        <letsencrypt.repo>https://letsencrypt.org/certs</letsencrypt.repo>
        <java.download.url>http://download.oracle.com/otn-pub/java/jdk</java.download.url>
        
        <alpine.repo></alpine.repo>
        <alpine.repo.end></alpine.repo.end>
        
        <ubuntu.repo></ubuntu.repo>
        <ubuntu.repo.end></ubuntu.repo.end>
        
        <debian.repo></debian.repo>
        <debian.repo.end></debian.repo.end>
    </properties>
    
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.2.3</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    
    <profiles>
        <profile>
            <!--
            Add -Dfileserver=http://hostname then these kick in.
            
            It will expect ${fileserver}/repo to contain the various apt/apk repositories as well as some like jenkins.war
            Whilst ${fileserver}/java the local copy of the JDK binaries.
            -->
            <activation>
                <property>
                    <name>fileserver</name>
                </property>
            </activation>
            <properties>
                <repo.base>${fileserver}/repo</repo.base>
        
                <jenkins.repo>${repo.base}/jenkins</jenkins.repo>
                <java.download.url>${fileserver}/java</java.download.url>
        
                <sed.common> -r \
                    -e "s|http(s?)://(.+).alpinelinux.org|${repo.base}/alpine|g" \
                    -e "s|http(s?)://httpredir.debian.org|${repo.base}/debian|g" \
                    -e "s|http(s?)://security.debian.org|${repo.base}/debian-security|g" \
                    -e "s|http(s?)://apt.postgresql.org|${repo.base}/postgresql-apt|g" \
                    -e "s|http(s?)://archive.ubuntu.com|${repo.base}/ubuntu|g"
                </sed.common>
                
                <!-- For now, if fileserver is not on same docker node or on a public IPv4 address alpine apk cannot access it -->
                <alpine.repo></alpine.repo>
                <alpine.repo.end></alpine.repo.end>
                <!--
                <alpine.repo>sed -i.bak ${sed.common} /etc/apk/repositories &amp;&amp;</alpine.repo>
                <alpine.repo.end>find /etc/apt -name "*.bak" -exec mv -v {} $(dirname {})/$(basename {} .bak) \; &amp;&amp;</alpine.repo.end>
                -->
        
                <ubuntu.repo>sed -i.bak ${sed.common} $(ls /etc/apt/sources.list /etc/apt/sources.list.d/*) &amp;&amp;</ubuntu.repo>
                <ubuntu.repo.end>find /etc/apt -type f -name "*.bak" -print0 | sed "s/.bak//g" | xargs --null -I{} mv {}.bak {} &amp;&amp;</ubuntu.repo.end>
        
                <debian.repo>sed -ibak ${sed.common} $(ls /etc/apt/sources.list /etc/apt/sources.list.d/*) &amp;&amp;</debian.repo>
                <debian.repo.end>find /etc/apt -type f -name "*.bak" -print0 | sed "s/.bak//g" | xargs --null -I{} mv {}.bak {} &amp;&amp;</debian.repo.end>
            </properties>
        </profile>
    </profiles>
</project>
